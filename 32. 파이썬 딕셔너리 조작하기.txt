#딕셔너리 조작하기

딕셔너리에 키-값 쌍 추가하기

setdefault:  키-값 쌍 추가 또는
update: 키의 값 수정 , 키가 없으면 키-값 쌍 추가

setdefault(키)는 딕셔너리에 키-값 쌍을 추가함

ex)

#키만 입력할때

x={'a':10 , 'b':20 , 'c':30 , 'd':40}
x.setdefault('e') 입력시
x출력후
x={'a':10 , 'b':20 , 'c':30 , 'd':40 , 'e'=None }

#키-값 쌍 추가할떄

x.setdefault('f',100) <- 키-값 쌍 추가함

x={'a':10 , 'b':20 , 'c':30 , 'd':40 , 'e'=None , 'f'=100}

#update

update(키=값)은 이름 그대로 딕셔너리에서의 키의 값을 수정함

x={'a':10 , 'b':20 , 'c':30 , 'd':40}
x.update(a=90)
x={'a':90 , 'b':20 , 'c':30 , 'd':40}

만약 딕셔너리에 키가 없으면 키-값 쌍을 추가함

x.update(e=50)
x={'a':10 , 'b':20 , 'c':30 , 'd':40 , ''e':50 }

#딕셔너리에서 키의 값 수정하기

x={'a':10 , 'b':20 , 'c':30 , 'd':40 , 'e'=None }
x.update(a=900, f=60) 입력시
x={'a':900 , 'b':20 , 'c':30 , 'd':40 , 'e'=None , 'f':60 } 없던거는 알아서 추가함

단 update는 키가 문자열일때만 사용할수있음
만약 키가 숫자일 경우에는 update(딕셔너리)처럼 딕셔너리를 넣어서 수정가능

y={1:'one' , 2: 'two' }
y.update({1:'ONE' , 3:"THREE"})
y 입력시
{1: 'ONE , 2:'two' , 3:'THREE'} 로 출력됨

#리스트와 튜플로 값을 수정하기

y가 {1: 'ONE , 2:'two' , 3:'THREE'} 일때
y.update([[2,'TWO'],[4,'FOUR']])
y 입력시

{1:'ONE' , 2:'TWO' , 3:'THREE' , 4:'FOUR'}

또는 zip 객체로 바꿀수있음

y.update(zip[1,2],['one' , 'two' ] ) )
y 입력시
{1:'one' , 2:'two' , 3:'THREE' , 4:'FOUR' }

#딕셔너리에서 키-값 쌍 삭제하기

pop(키) 사용하기

x={'a':10 , 'b':20 , 'c':30 , 'd':40 }
x.pop('a') 하면
x={'b':20 , 'c':30 , 'd':40 } 이 출력됨

만약 키가 없을때는 기본값만 반환한다.

x.pop('z',0) 입력시
0만 출력됨

pop 대신에 del 키로 키-값 쌍을 삭제할수 있음

x={'a':10 , 'b':20 , 'c':30 , 'd':40 }
del x['a']
x={'b':20 , 'c':30 , 'd':40 } 이 출력됨

#딕셔너리에서 임의의 키-값 쌍 삭제하기

x={'a':10 , 'b':20 , 'c':30 , 'd':40 }
x.popitem()   <- 마지막 키 값 삭제함
x={'a':10 , 'b':20 , 'c':30}

#딕셔너리의 모든 키-값 쌍 삭제하기

clear()은 딕셔너리의 모든 키-값 쌍을 삭제함

x={'a':10 , 'b':20 , 'c':30 }
x.clear() 입력시
x는 { } 만 남음

#딕셔너리에서 키의 값을 가져오기

x={'a':10 , 'b':20 , 'c':30 } 
x.get('a') 입력시
10이 출력이됨

또는 x.get('z',0) 입력시
0만 출력됨

x.get('a',90) 을해도
10이 출력됨

#딕셔너리에서 키-값 쌍 모두 가져오기

items : 키-값 쌍을 모두 가져옴
keys: 키를 모두 가져옴
values: 값을 모두 가져옴

ex)

x={'a':10 , 'b':20 , 'c':30 } 
x.items()
dict_items( [ ( 'a',10) , ('b',20) , ('c',30) ] )

x.keys()
dict_keys( [ 'a' , 'b' , 'c' ] )

x.values()
dict_values( [10,20,30] )

#리스트와 튜플로 딕셔너리를 만들기

dict.fromkeys(키리스트)는 키 리스트로 딕셔너리를 생상하며 값은 모두 None이 됨

keys=[ 'a' , 'b' , 'c' , 'd' ]
x.dict.fromkeys(keys)
x 입력시
{'a' : None , 'b' : None , 'c': None , 'd':None} 출력됨

또는
y=dict.fromkeys(keys,100) 입력시
y는
{'a':100 , 'b':100 , 'c':100 , 'd':100} 이 출력됨
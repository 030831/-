#추상 클래스 사용하기

추상 클래스는 메서드의 목록만 가진 클래스이며
상속받는 클래스에서 메서드 구현을 강제하기 위해 사용함


from abc import *

	class 추상클래스이름(metaclass=ABCMeta):

	@abstractmethod
	def 메서드이름(self):
		코드



from abc import *

class StudentBase(metaclass=ABCMeta):
	@abstractmethod
	def study(self):
		pass

	@abstractmethod
	def go_to_school(self):
		pass

class Student(StudentBase):
	def study(self):
		print("공부하기")

james=Student()
james.study()

이때 오류가 발생함.

class Student(StudentBase) 에서
go_to_school을 구현하지 않아서 오류가 생김.

추상클래스에서 상속을 받을때는 무조건 @abstractmethod의 메서드를 구현해야함.

from abc import *

class StudentBase(metaclass=ABCMeta):
	@abstractmethod
	def study(self):
		pass

	@abstractmethod
	def go_to_school(self):
		pass

class Student(StudentBase):
	def study(self):
		print("공부하기")


	def go_to_school(self):
		print("학교가기")

james=Student()
james.study()
james.go_to_school() 입력시

공부하기
하교가기 <-가 출력이 됨


추상클래스는 무조건 상속클래스에서 모든 메서드를 구현해야함.
또한 추상클래스는 인스턴스로 만들수가없음.

james=StidentBase() 입력시 오류가 발생이됨.

그래서 추상메서드는 호출할 일이 없으므로 빈 메서드(pass)를 만듬.

파생클래스에서 반드시 구현해야할 메서드를 정해 줄 때 사용함.
까먹지 않기 위해 사용함.

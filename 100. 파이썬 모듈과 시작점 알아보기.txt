#모듈과 시작점 알아보기

인터넷에 있는 파이썬 코드를 보다보면

if __name__ == '__main__': 으로 시작하는 부분을 자주 만나게됨.

이 코드는 현재 스크립트 파일이 실행되는 상태를 파악하기 위해 사용함.
다음내용을 프로젝트 폴더 안에 hello.py 파일로 저장하자..


print('hello 모듈 시작')
print('hello.py__name__:' , __name__ ) #모듈 이름이 name으로들어감
print('hello 모듈 끝')

다음 내용을 프로젝트 폴더 안에 main.py파일로 저장한 뒤 실행해보자.

import hello #hello 모듈을 가져옴

print('main.py __name__: ' , __name__)

입력시
hello 모듈시작
hellp.py __name__: hello
hello 모듈 끝
main.py __name__:__main__ <- 정상적으로 출력이 됨.

__name__은 모듈의 이름이 저장되는 변수이며 import로 모듈을 가져왔을 떄
모듈의 이름이 들어감

파이썬은 인터프리터로 스크립트 파일을 직접 실행했을 떄는
모듈의 이름이 아니라 '__main__'으로 들어감(__name__ 과 __main__은 다름)

어떤 스크립트 파일이든 파이썬 인터프리터가 최초로 실행한 스크립트 파일의
__name__에는 '__main__'이 들어감.


즉 hello.py를 단독으로 실행했을때
name의 이름은 main으로 설정이 됨.


파이썬은 최초로 시작하는 스크립트 파일과 모듈의 차이가 없음
스크립트 파일이든 시작점이 될 수도있고 , 모듈도 될 수도 있음.
name 변수를 통해 현재 스크립트 파일이 시작점인지 모듈인지 판단함.
if__name__=='__main__': 처럼 __name__ 변수값이 '__main__'인지 확인하는 코드는
현재 스크립트 파일이 프로그램의 시작점이 맞는지 판단하는 작업임

스크립트 파일이 메인 프로그램으로 사용될 떄와 모듈로 사용될 떄를 구분하기 위한
용도이다.

#스크립트 파일로 실행하거나 모듈로 사용하는 코드 만들기


다음 내용을 프로젝트 폴더 안에 calc.py파일로 저장한 뒤 실행해보자

def add(a,b):
	return a+b

def mul(a,b):
	return a*b

if __name__=='__main__': #프로그램의 시작점일때만 아래 코드를 실행함
	print(add(10,20) )
	print(mul(10,20) )

정상적으로
30
200이 출력이 됨.

그럼 calc.py를 모듈로 사용하고 import로 calc를 가져와보죠

import calc를 입력시 아무것도 출력되지않음.

calc.add(50,60)
110 <- 이렇게 사용해야함.
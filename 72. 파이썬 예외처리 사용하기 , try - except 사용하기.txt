#예외처리 사용하기 , try - except 사용하기


예외(exception)란 코드를 실행하는 도중에 발생한 에러를 뜻함.


def ten_div(x):
	return 10/x

ten_div(2) 입력시 5.0 이 출력이 됨

하지만 0을 넣으면 실행하난 중에 에러가 발생함.
이러한 상황을 예외라고 한다.

#try except 사용하기

try:
	실행할 코드

except:
	예외가 발생했을때 처리하는 코드


try:
	x=int(input('나눌 숫자를 입력하세요:' ) )
	y=10/x
	print(y)

except:
	print('예외가 발생했습니다.')


예외가 발생하면 코드 실행을 바로 중단하고
바로 except로 가서 코드를 실행함.

#특정  예외만 처리하기

try:
	실행할 코드
except 예외이름:
	예외가 발생했을때 처리하는 코드



y=[10,20,30]

try:
	index,x=map(int,input('인덱스와 나눌 숫자를 입력하세요:').split())
	print(y[index]/x)

except ZeroDivisionError:
	print('숫자를 0으로 나눌 수 없습니다')

except IndexError:
	print('잘못된 인덱스 입니다')



#예외의 에러 메세지 받아오기

try:
	실행할 코드

except 예외 as 변수:
	예외가 발생했을때 처리하는 코드


y=[10,20,30]

try:
	index,x=map(int,input('인덱스와 나눌 숫자를 입력하세요:').split())
	print(y[index]/x)

except ZeroDivisionError as e:
	print('숫자를 0으로 나눌 수 없습니다'.e)

except IndexError as e:
	print('잘못된 인덱스 입니다' , e)


예외에 해당하는 에러메시지를 알려주기 때문에 유용함

예외가 여러개 발생하면 먼저 발상한 예외의 처리 코드만 실행됨.
또는 기반클래스>파생클래스 순으로 예외처리가됨.

#모든 예외의 에러 메세지를 출력하기

except Exception as e:
	print('예외가 발생하였습니다.' , e)

이러면 모든 예외의 에러메세지를 출력해줌.

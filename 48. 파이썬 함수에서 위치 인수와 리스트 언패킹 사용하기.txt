#함수에서 위치 인수와 리스트 언패킹 사용하기

다음과 같이 함수에 인수를 순서대로 넣는 방식을

위치 인수 ( positional argument ) 라고 함

즉 , 인수의 위치가 정해져 있음

print(10 , 20, 30)
10 20 30

#위치 인수를 사용하는 함수를만들고 호출하기

def print_number(a,b,c):
	print(a)
	print(b)
	print(c)
print_number(10,20,30) 입력시
10
20
30 이 출력됨

#언패킹 사용하기

인수를 순서대로 넣을때는 리스트나 튜플을 사용할 수 있음

다음과 같이 리스트 또는 튜플앞에 *(에스터리스크)를 붙여서 함수에 넣어주면됨

x=[10,20,30]
print_number(*x)
10
20
30 이 출력됨

리스트(튜플) 앞에 * 를 붙이면 언패킹이 됨

리스트 변수 대신 리스트 바로 앞에 * 를 붙여도 됌

print_number(*[10,20,30])
10
20
30 이 출력됨

이때 함수의 매개변수 개수와 리스트의 요소 개수는 같아야 함
함수 def print_number(a,b,c): 를 했으면
리스트에 요소를 무조건 3개를넣어야함

#가변 인수 함수 만들기

위치 인수와 리스트 언패킹은 인수의 개수가 정해지지않은
가변인수에 사용함

def print_number(*args):
	for arg in args:
		print(arg)

이떄
print_number(10) 또는
print_number(10,20,30) 모두 출력가능

또는
x=[10]
print_number(*x)
10 이 출력됨

y=[10,20,30,40]
print_number(*y)
10
20
30
40 이 출력됨

